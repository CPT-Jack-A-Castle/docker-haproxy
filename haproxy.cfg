global
  maxconn 2048

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private
  #ca-base /var/lib/haproxy/certs
  #crt-base /var/lib/haproxy/certs

  # Default ciphers to use on SSL-enabled listening sockets.
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

  #wahu
  tune.ssl.default-dh-param 2048
  ssl-server-verify none # Disable validation of certificates (because of self-signed certificates) or set to required
  # Increase TLS session cache size and lifetime to avoid computing too many symmetric keys
  tune.ssl.cachesize 100000
  tune.ssl.lifetime 600
  # Set up a TLS record to match a TCP segment size, in order to improve client side rendering of content
  tune.ssl.maxrecord 1460

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  option  forwardfor
  option  http-server-close
  option  http-keep-alive

  timeout connect 130s
  timeout client 130s
  timeout client-fin 111s
  timeout server 130s
  timeout server-fin 111s
  timeout http-request 130s
  timeout http-keep-alive 300s
  # Long timeout for WebSocket connections.
  timeout tunnel 1h

#  errorfile 400 /etc/haproxy/errors/400.http
#  errorfile 403 /etc/haproxy/errors/403.http
#  errorfile 408 /etc/haproxy/errors/408.http
#  errorfile 500 /etc/haproxy/errors/500.http
#  errorfile 502 /etc/haproxy/errors/502.http
#  errorfile 503 /etc/haproxy/errors/503.http
#  errorfile 504 /etc/haproxy/errors/504.http

frontend unsecured
  bind :80
#  acl http ssl_fc,not
#  http-request redirect scheme https if http
  default_backend corp

frontend haproxy
  bind :443 ssl crt /certs/wildcard.pem
  reqadd X-Forwarded-Proto:\ http
# Remove headers that expose security-sensitive information.
  #rspidel ^Server:.*$
  #rspidel ^X-Powered-By:.*$
  #rspidel ^X-AspNet-Version:.*$
  #rspidel ^X-AspNetMvc-Version:.*$

  #http-response set-header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
  #http-response set-header Referrer-Policy "no-referrer-when-downgrade"

  # If url contains "O365AuditWebHook" then redirect to the ACS O365 webhook
  #acl url_audit path_beg -i /O365AuditWebHook
  #use_backend ACS.WebHook.O365 if url_audit
  # If url contains "O365AdminConsent" hen redirect to the ACS - but why?
  #acl url_consent path_beg -i /O365AdminConsent
  #use_backend ACS.AdminConsent if url_consent

  default_backend myapp

backend myapp
  server myapp 192.168.1.50:8082

backend corp
   no log
   server DE-WEBLAB-01-SSO 192.168.1.50:8082
   #server DE-WEBLAB-01-SSO 192.168.1.50:8082 check ssl verify none
   http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"
   http-response set-header X-Frame-Options SAMEORIGIN
   http-response set-header X-XSS-Protection "1; mode=block"
   http-response set-header Referrer-Policy no-referrer-when-downgrade

# HaProxy Stats
listen stats
  bind :666
  stats enable
#  stats hide-version
#  stats auth user:password
  stats uri /
  stats realm HAproxy\ Statistics
  stats admin if TRUE
  http-request set-log-level silent
